import com.jcraft.jsch.*;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.InputStream;
import java.util.Scanner;

public class SSHConnection {
    public static void main(String[] args) {
        String host = "your-unix-host";
        String user = "your-username";
        String password = "your-password";
        int port = 22;

        try {
            JSch jsch = new JSch();
            Session session = jsch.getSession(user, host, port);
            session.setPassword(password);

            // Avoid asking for key confirmation
            session.setConfig("StrictHostKeyChecking", "no");

            session.connect(); // Connect to Unix server
            System.out.println("Connected to Unix");

            // Scanner to take input from user
            Scanner scanner = new Scanner(System.in);

            boolean keepRunning = true;
            while (keepRunning) {
                System.out.println("Enter a command to execute on Unix (type 'exit' to stop): ");
                String command = scanner.nextLine();

                // If user types 'exit', disconnect and stop
                if (command.equalsIgnoreCase("exit")) {
                    keepRunning = false;
                    break;
                }

                // Execute the Unix command using ChannelExec
                ChannelExec channelExec = (ChannelExec) session.openChannel("exec");
                channelExec.setCommand(command);

                // Set up streams to capture both output and error streams
                InputStream input = channelExec.getInputStream();
                InputStream err = channelExec.getErrStream();

                channelExec.connect(); // Execute the command

                // Read standard output
                BufferedReader reader = new BufferedReader(new InputStreamReader(input));
                String line;
                while ((line = reader.readLine()) != null) {
                    System.out.println(line);  // Print output to console
                }

                // Read standard error (if any)
                BufferedReader errorReader = new BufferedReader(new InputStreamReader(err));
                while ((line = errorReader.readLine()) != null) {
                    System.out.println("Error: " + line);  // Print errors to console
                }

                // Wait for command to complete and disconnect
                channelExec.disconnect();
            }

            // Disconnect session after all commands are executed
            session.disconnect();
            System.out.println("Disconnected from Unix");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
