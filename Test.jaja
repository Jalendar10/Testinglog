import com.jcraft.jsch.*;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.Scanner;

public class SSHConnection {
    public static void main(String[] args) {
        String host = "your-unix-host";
        String user = "your-username";
        String password = "your-password";
        int port = 22;

        try {
            JSch jsch = new JSch();
            Session session = jsch.getSession(user, host, port);
            session.setPassword(password);

            // Avoid asking for key confirmation
            session.setConfig("StrictHostKeyChecking", "no");

            session.connect(); // Connect to Unix server
            System.out.println("Connected to Unix");

            // Open a shell channel for interactive command execution
            ChannelShell channelShell = (ChannelShell) session.openChannel("shell");

            // Get input/output streams for interaction
            OutputStream outputStream = channelShell.getOutputStream();
            BufferedReader reader = new BufferedReader(new InputStreamReader(channelShell.getInputStream()));

            // Connect to shell
            channelShell.connect();
            
            // Create a thread to read the command output
            new Thread(() -> {
                try {
                    String line;
                    while ((line = reader.readLine()) != null) {
                        System.out.println(line);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }).start();

            // Send commands to the shell
            outputStream.write(("dzdo su - compadmin\n").getBytes());
            outputStream.flush();

            // Optionally wait for a prompt, depending on the remote system's response
            Thread.sleep(2000); // Adjust as needed

            // Take user input from the console
            Scanner scanner = new Scanner(System.in);
            while (true) {
                System.out.print("Enter command to execute: ");
                String command = scanner.nextLine();
                if (command.equalsIgnoreCase("exit")) {
                    break;
                }
                outputStream.write((command + "\n").getBytes());
                outputStream.flush();
            }

            // Close the output stream when done
            outputStream.close();

            // Disconnect the shell and session
            channelShell.disconnect();
            session.disconnect();
            System.out.println("Disconnected from Unix");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
